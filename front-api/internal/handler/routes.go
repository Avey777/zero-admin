// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	auth "zero-admin/front-api/internal/handler/auth"
	cart "zero-admin/front-api/internal/handler/cart"
	category "zero-admin/front-api/internal/handler/category"
	collect "zero-admin/front-api/internal/handler/collect"
	home "zero-admin/front-api/internal/handler/home"
	order "zero-admin/front-api/internal/handler/order"
	product "zero-admin/front-api/internal/handler/product"
	"zero-admin/front-api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/api/auth/login",
				Handler: auth.LoginHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/auth/register",
				Handler: auth.RegisterHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/api/cart/index/:userId",
				Handler: cart.CartListHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/cart/add",
				Handler: cart.CartAddHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/cart/fastadd",
				Handler: cart.CartFastAddHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/cart/checked",
				Handler: cart.CartCheckedHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/cart/checkout",
				Handler: cart.CartCheckOutHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/cart/delete",
				Handler: cart.CartDeleteHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/cart/update",
				Handler: cart.CartUpdateHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/api/catalog/getfirstcategory",
				Handler: category.GetFirstCategoryHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/catalog/getsecondcategory",
				Handler: category.GetSecondCategoryHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/api/collect/list",
				Handler: collect.CollectListHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/collect/addordelete",
				Handler: collect.AddordeleteHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/api/home/index",
				Handler: home.HomeIndexHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/api/order/list",
				Handler: order.OrderListHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/order/cancel",
				Handler: order.OrderCancelHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/order/refund",
				Handler: order.OrderRefundHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/order/confirm",
				Handler: order.OrderConfirmHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/order/delete",
				Handler: order.OrderDeleteHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/order/goods",
				Handler: order.OrderGoodsHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/order/comment",
				Handler: order.OrderCommentHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/api/goods/detail",
				Handler: product.GoodsDetailHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/goods/category",
				Handler: product.GoodsCategoryHandler(serverCtx),
			},
		},
	)
}
