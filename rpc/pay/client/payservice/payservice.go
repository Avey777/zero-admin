// Code generated by goctl. DO NOT EDIT.
// Source: pay.proto

package payservice

import (
	"context"

	"zero-admin/rpc/pay/payclient"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	PayQueryReq  = payclient.PayQueryReq
	PayQueryResp = payclient.PayQueryResp
	PayReq       = payclient.PayReq
	PayResp      = payclient.PayResp

	PayService interface {
		Pay(ctx context.Context, in *PayReq, opts ...grpc.CallOption) (*PayResp, error)
		PayQuery(ctx context.Context, in *PayQueryResp, opts ...grpc.CallOption) (*PayQueryReq, error)
	}

	defaultPayService struct {
		cli zrpc.Client
	}
)

func NewPayService(cli zrpc.Client) PayService {
	return &defaultPayService{
		cli: cli,
	}
}

func (m *defaultPayService) Pay(ctx context.Context, in *PayReq, opts ...grpc.CallOption) (*PayResp, error) {
	client := payclient.NewPayServiceClient(m.cli.Conn())
	return client.Pay(ctx, in, opts...)
}

func (m *defaultPayService) PayQuery(ctx context.Context, in *PayQueryResp, opts ...grpc.CallOption) (*PayQueryReq, error) {
	client := payclient.NewPayServiceClient(m.cli.Conn())
	return client.PayQuery(ctx, in, opts...)
}
