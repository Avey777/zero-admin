// Code generated by goctl. DO NOT EDIT.
// Source: sms.proto

package server

import (
	"context"

	"github.com/feihua/zero-admin/rpc/sms/internal/logic/homebrandservice"
	"github.com/feihua/zero-admin/rpc/sms/internal/svc"
	"github.com/feihua/zero-admin/rpc/sms/smsclient"
)

type HomeBrandServiceServer struct {
	svcCtx *svc.ServiceContext
	smsclient.UnimplementedHomeBrandServiceServer
}

func NewHomeBrandServiceServer(svcCtx *svc.ServiceContext) *HomeBrandServiceServer {
	return &HomeBrandServiceServer{
		svcCtx: svcCtx,
	}
}

func (s *HomeBrandServiceServer) HomeBrandAdd(ctx context.Context, in *smsclient.HomeBrandAddReq) (*smsclient.HomeBrandAddResp, error) {
	l := homebrandservicelogic.NewHomeBrandAddLogic(ctx, s.svcCtx)
	return l.HomeBrandAdd(in)
}

func (s *HomeBrandServiceServer) HomeBrandList(ctx context.Context, in *smsclient.HomeBrandListReq) (*smsclient.HomeBrandListResp, error) {
	l := homebrandservicelogic.NewHomeBrandListLogic(ctx, s.svcCtx)
	return l.HomeBrandList(in)
}

// 修改推荐品牌排序
func (s *HomeBrandServiceServer) UpdateHomeBrandSort(ctx context.Context, in *smsclient.UpdateHomeBrandSortReq) (*smsclient.UpdateHomeBrandSortResp, error) {
	l := homebrandservicelogic.NewUpdateHomeBrandSortLogic(ctx, s.svcCtx)
	return l.UpdateHomeBrandSort(in)
}

// 批量修改推荐品牌状态
func (s *HomeBrandServiceServer) UpdateHomeBrandStatus(ctx context.Context, in *smsclient.UpdateHomeBrandStatusReq) (*smsclient.UpdateHomeBrandStatusResp, error) {
	l := homebrandservicelogic.NewUpdateHomeBrandStatusLogic(ctx, s.svcCtx)
	return l.UpdateHomeBrandStatus(in)
}

func (s *HomeBrandServiceServer) HomeBrandDelete(ctx context.Context, in *smsclient.HomeBrandDeleteReq) (*smsclient.HomeBrandDeleteResp, error) {
	l := homebrandservicelogic.NewHomeBrandDeleteLogic(ctx, s.svcCtx)
	return l.HomeBrandDelete(in)
}
