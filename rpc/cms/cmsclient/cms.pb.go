// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.19.4
// source: cms.proto

package cmsclient

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SubjectAddReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`                           //
	CategoryId      int64  `protobuf:"varint,2,opt,name=CategoryId,proto3" json:"CategoryId,omitempty"`           //
	Title           string `protobuf:"bytes,3,opt,name=Title,proto3" json:"Title,omitempty"`                      //
	Pic             string `protobuf:"bytes,4,opt,name=Pic,proto3" json:"Pic,omitempty"`                          //专题主图
	ProductCount    int64  `protobuf:"varint,5,opt,name=ProductCount,proto3" json:"ProductCount,omitempty"`       //关联产品数量
	RecommendStatus int64  `protobuf:"varint,6,opt,name=RecommendStatus,proto3" json:"RecommendStatus,omitempty"` //
	CreateTime      string `protobuf:"bytes,7,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`            //
	CollectCount    int64  `protobuf:"varint,8,opt,name=CollectCount,proto3" json:"CollectCount,omitempty"`       //
	ReadCount       int64  `protobuf:"varint,9,opt,name=ReadCount,proto3" json:"ReadCount,omitempty"`             //
	CommentCount    int64  `protobuf:"varint,10,opt,name=CommentCount,proto3" json:"CommentCount,omitempty"`      //
	AlbumPics       string `protobuf:"bytes,11,opt,name=AlbumPics,proto3" json:"AlbumPics,omitempty"`             //画册图片用逗号分割
	Description     string `protobuf:"bytes,12,opt,name=Description,proto3" json:"Description,omitempty"`         //
	ShowStatus      int64  `protobuf:"varint,13,opt,name=ShowStatus,proto3" json:"ShowStatus,omitempty"`          //显示状态：0->不显示；1->显示
	Content         string `protobuf:"bytes,14,opt,name=Content,proto3" json:"Content,omitempty"`                 //
	ForwardCount    int64  `protobuf:"varint,15,opt,name=ForwardCount,proto3" json:"ForwardCount,omitempty"`      //转发数
	CategoryName    string `protobuf:"bytes,16,opt,name=CategoryName,proto3" json:"CategoryName,omitempty"`       //专题分类名称
}

func (x *SubjectAddReq) Reset() {
	*x = SubjectAddReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cms_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubjectAddReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubjectAddReq) ProtoMessage() {}

func (x *SubjectAddReq) ProtoReflect() protoreflect.Message {
	mi := &file_cms_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubjectAddReq.ProtoReflect.Descriptor instead.
func (*SubjectAddReq) Descriptor() ([]byte, []int) {
	return file_cms_proto_rawDescGZIP(), []int{0}
}

func (x *SubjectAddReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SubjectAddReq) GetCategoryId() int64 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *SubjectAddReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SubjectAddReq) GetPic() string {
	if x != nil {
		return x.Pic
	}
	return ""
}

func (x *SubjectAddReq) GetProductCount() int64 {
	if x != nil {
		return x.ProductCount
	}
	return 0
}

func (x *SubjectAddReq) GetRecommendStatus() int64 {
	if x != nil {
		return x.RecommendStatus
	}
	return 0
}

func (x *SubjectAddReq) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *SubjectAddReq) GetCollectCount() int64 {
	if x != nil {
		return x.CollectCount
	}
	return 0
}

func (x *SubjectAddReq) GetReadCount() int64 {
	if x != nil {
		return x.ReadCount
	}
	return 0
}

func (x *SubjectAddReq) GetCommentCount() int64 {
	if x != nil {
		return x.CommentCount
	}
	return 0
}

func (x *SubjectAddReq) GetAlbumPics() string {
	if x != nil {
		return x.AlbumPics
	}
	return ""
}

func (x *SubjectAddReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SubjectAddReq) GetShowStatus() int64 {
	if x != nil {
		return x.ShowStatus
	}
	return 0
}

func (x *SubjectAddReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *SubjectAddReq) GetForwardCount() int64 {
	if x != nil {
		return x.ForwardCount
	}
	return 0
}

func (x *SubjectAddReq) GetCategoryName() string {
	if x != nil {
		return x.CategoryName
	}
	return ""
}

type SubjectAddResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *SubjectAddResp) Reset() {
	*x = SubjectAddResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cms_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubjectAddResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubjectAddResp) ProtoMessage() {}

func (x *SubjectAddResp) ProtoReflect() protoreflect.Message {
	mi := &file_cms_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubjectAddResp.ProtoReflect.Descriptor instead.
func (*SubjectAddResp) Descriptor() ([]byte, []int) {
	return file_cms_proto_rawDescGZIP(), []int{1}
}

func (x *SubjectAddResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type SubjectDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *SubjectDeleteReq) Reset() {
	*x = SubjectDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cms_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubjectDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubjectDeleteReq) ProtoMessage() {}

func (x *SubjectDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_cms_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubjectDeleteReq.ProtoReflect.Descriptor instead.
func (*SubjectDeleteReq) Descriptor() ([]byte, []int) {
	return file_cms_proto_rawDescGZIP(), []int{2}
}

func (x *SubjectDeleteReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type SubjectDeleteResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *SubjectDeleteResp) Reset() {
	*x = SubjectDeleteResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cms_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubjectDeleteResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubjectDeleteResp) ProtoMessage() {}

func (x *SubjectDeleteResp) ProtoReflect() protoreflect.Message {
	mi := &file_cms_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubjectDeleteResp.ProtoReflect.Descriptor instead.
func (*SubjectDeleteResp) Descriptor() ([]byte, []int) {
	return file_cms_proto_rawDescGZIP(), []int{3}
}

func (x *SubjectDeleteResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type SubjectUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`                           //
	CategoryId      int64  `protobuf:"varint,2,opt,name=CategoryId,proto3" json:"CategoryId,omitempty"`           //
	Title           string `protobuf:"bytes,3,opt,name=Title,proto3" json:"Title,omitempty"`                      //
	Pic             string `protobuf:"bytes,4,opt,name=Pic,proto3" json:"Pic,omitempty"`                          //专题主图
	ProductCount    int64  `protobuf:"varint,5,opt,name=ProductCount,proto3" json:"ProductCount,omitempty"`       //关联产品数量
	RecommendStatus int64  `protobuf:"varint,6,opt,name=RecommendStatus,proto3" json:"RecommendStatus,omitempty"` //
	CreateTime      string `protobuf:"bytes,7,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`            //
	CollectCount    int64  `protobuf:"varint,8,opt,name=CollectCount,proto3" json:"CollectCount,omitempty"`       //
	ReadCount       int64  `protobuf:"varint,9,opt,name=ReadCount,proto3" json:"ReadCount,omitempty"`             //
	CommentCount    int64  `protobuf:"varint,10,opt,name=CommentCount,proto3" json:"CommentCount,omitempty"`      //
	AlbumPics       string `protobuf:"bytes,11,opt,name=AlbumPics,proto3" json:"AlbumPics,omitempty"`             //画册图片用逗号分割
	Description     string `protobuf:"bytes,12,opt,name=Description,proto3" json:"Description,omitempty"`         //
	ShowStatus      int64  `protobuf:"varint,13,opt,name=ShowStatus,proto3" json:"ShowStatus,omitempty"`          //显示状态：0->不显示；1->显示
	Content         string `protobuf:"bytes,14,opt,name=Content,proto3" json:"Content,omitempty"`                 //
	ForwardCount    int64  `protobuf:"varint,15,opt,name=ForwardCount,proto3" json:"ForwardCount,omitempty"`      //转发数
	CategoryName    string `protobuf:"bytes,16,opt,name=CategoryName,proto3" json:"CategoryName,omitempty"`       //专题分类名称
}

func (x *SubjectUpdateReq) Reset() {
	*x = SubjectUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cms_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubjectUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubjectUpdateReq) ProtoMessage() {}

func (x *SubjectUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_cms_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubjectUpdateReq.ProtoReflect.Descriptor instead.
func (*SubjectUpdateReq) Descriptor() ([]byte, []int) {
	return file_cms_proto_rawDescGZIP(), []int{4}
}

func (x *SubjectUpdateReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SubjectUpdateReq) GetCategoryId() int64 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *SubjectUpdateReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SubjectUpdateReq) GetPic() string {
	if x != nil {
		return x.Pic
	}
	return ""
}

func (x *SubjectUpdateReq) GetProductCount() int64 {
	if x != nil {
		return x.ProductCount
	}
	return 0
}

func (x *SubjectUpdateReq) GetRecommendStatus() int64 {
	if x != nil {
		return x.RecommendStatus
	}
	return 0
}

func (x *SubjectUpdateReq) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *SubjectUpdateReq) GetCollectCount() int64 {
	if x != nil {
		return x.CollectCount
	}
	return 0
}

func (x *SubjectUpdateReq) GetReadCount() int64 {
	if x != nil {
		return x.ReadCount
	}
	return 0
}

func (x *SubjectUpdateReq) GetCommentCount() int64 {
	if x != nil {
		return x.CommentCount
	}
	return 0
}

func (x *SubjectUpdateReq) GetAlbumPics() string {
	if x != nil {
		return x.AlbumPics
	}
	return ""
}

func (x *SubjectUpdateReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SubjectUpdateReq) GetShowStatus() int64 {
	if x != nil {
		return x.ShowStatus
	}
	return 0
}

func (x *SubjectUpdateReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *SubjectUpdateReq) GetForwardCount() int64 {
	if x != nil {
		return x.ForwardCount
	}
	return 0
}

func (x *SubjectUpdateReq) GetCategoryName() string {
	if x != nil {
		return x.CategoryName
	}
	return ""
}

type SubjectUpdateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *SubjectUpdateResp) Reset() {
	*x = SubjectUpdateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cms_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubjectUpdateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubjectUpdateResp) ProtoMessage() {}

func (x *SubjectUpdateResp) ProtoReflect() protoreflect.Message {
	mi := &file_cms_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubjectUpdateResp.ProtoReflect.Descriptor instead.
func (*SubjectUpdateResp) Descriptor() ([]byte, []int) {
	return file_cms_proto_rawDescGZIP(), []int{5}
}

func (x *SubjectUpdateResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type SubjectListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current         int64  `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	PageSize        int64  `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	Title           string `protobuf:"bytes,3,opt,name=Title,proto3" json:"Title,omitempty"`                      //
	RecommendStatus int64  `protobuf:"varint,6,opt,name=RecommendStatus,proto3" json:"RecommendStatus,omitempty"` //
	ShowStatus      int64  `protobuf:"varint,13,opt,name=ShowStatus,proto3" json:"ShowStatus,omitempty"`          //显示状态：0->不显示；1->显示
}

func (x *SubjectListReq) Reset() {
	*x = SubjectListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cms_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubjectListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubjectListReq) ProtoMessage() {}

func (x *SubjectListReq) ProtoReflect() protoreflect.Message {
	mi := &file_cms_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubjectListReq.ProtoReflect.Descriptor instead.
func (*SubjectListReq) Descriptor() ([]byte, []int) {
	return file_cms_proto_rawDescGZIP(), []int{6}
}

func (x *SubjectListReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *SubjectListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *SubjectListReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SubjectListReq) GetRecommendStatus() int64 {
	if x != nil {
		return x.RecommendStatus
	}
	return 0
}

func (x *SubjectListReq) GetShowStatus() int64 {
	if x != nil {
		return x.ShowStatus
	}
	return 0
}

type SubjectListByIdsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *SubjectListByIdsReq) Reset() {
	*x = SubjectListByIdsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cms_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubjectListByIdsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubjectListByIdsReq) ProtoMessage() {}

func (x *SubjectListByIdsReq) ProtoReflect() protoreflect.Message {
	mi := &file_cms_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubjectListByIdsReq.ProtoReflect.Descriptor instead.
func (*SubjectListByIdsReq) Descriptor() ([]byte, []int) {
	return file_cms_proto_rawDescGZIP(), []int{7}
}

func (x *SubjectListByIdsReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type SubjectListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`                           //
	CategoryId      int64  `protobuf:"varint,2,opt,name=CategoryId,proto3" json:"CategoryId,omitempty"`           //
	Title           string `protobuf:"bytes,3,opt,name=Title,proto3" json:"Title,omitempty"`                      //
	Pic             string `protobuf:"bytes,4,opt,name=Pic,proto3" json:"Pic,omitempty"`                          //专题主图
	ProductCount    int64  `protobuf:"varint,5,opt,name=ProductCount,proto3" json:"ProductCount,omitempty"`       //关联产品数量
	RecommendStatus int64  `protobuf:"varint,6,opt,name=RecommendStatus,proto3" json:"RecommendStatus,omitempty"` //
	CreateTime      string `protobuf:"bytes,7,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`            //
	CollectCount    int64  `protobuf:"varint,8,opt,name=CollectCount,proto3" json:"CollectCount,omitempty"`       //
	ReadCount       int64  `protobuf:"varint,9,opt,name=ReadCount,proto3" json:"ReadCount,omitempty"`             //
	CommentCount    int64  `protobuf:"varint,10,opt,name=CommentCount,proto3" json:"CommentCount,omitempty"`      //
	AlbumPics       string `protobuf:"bytes,11,opt,name=AlbumPics,proto3" json:"AlbumPics,omitempty"`             //画册图片用逗号分割
	Description     string `protobuf:"bytes,12,opt,name=Description,proto3" json:"Description,omitempty"`         //
	ShowStatus      int64  `protobuf:"varint,13,opt,name=ShowStatus,proto3" json:"ShowStatus,omitempty"`          //显示状态：0->不显示；1->显示
	Content         string `protobuf:"bytes,14,opt,name=Content,proto3" json:"Content,omitempty"`                 //
	ForwardCount    int64  `protobuf:"varint,15,opt,name=ForwardCount,proto3" json:"ForwardCount,omitempty"`      //转发数
	CategoryName    string `protobuf:"bytes,16,opt,name=CategoryName,proto3" json:"CategoryName,omitempty"`       //专题分类名称
}

func (x *SubjectListData) Reset() {
	*x = SubjectListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cms_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubjectListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubjectListData) ProtoMessage() {}

func (x *SubjectListData) ProtoReflect() protoreflect.Message {
	mi := &file_cms_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubjectListData.ProtoReflect.Descriptor instead.
func (*SubjectListData) Descriptor() ([]byte, []int) {
	return file_cms_proto_rawDescGZIP(), []int{8}
}

func (x *SubjectListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SubjectListData) GetCategoryId() int64 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *SubjectListData) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SubjectListData) GetPic() string {
	if x != nil {
		return x.Pic
	}
	return ""
}

func (x *SubjectListData) GetProductCount() int64 {
	if x != nil {
		return x.ProductCount
	}
	return 0
}

func (x *SubjectListData) GetRecommendStatus() int64 {
	if x != nil {
		return x.RecommendStatus
	}
	return 0
}

func (x *SubjectListData) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *SubjectListData) GetCollectCount() int64 {
	if x != nil {
		return x.CollectCount
	}
	return 0
}

func (x *SubjectListData) GetReadCount() int64 {
	if x != nil {
		return x.ReadCount
	}
	return 0
}

func (x *SubjectListData) GetCommentCount() int64 {
	if x != nil {
		return x.CommentCount
	}
	return 0
}

func (x *SubjectListData) GetAlbumPics() string {
	if x != nil {
		return x.AlbumPics
	}
	return ""
}

func (x *SubjectListData) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SubjectListData) GetShowStatus() int64 {
	if x != nil {
		return x.ShowStatus
	}
	return 0
}

func (x *SubjectListData) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *SubjectListData) GetForwardCount() int64 {
	if x != nil {
		return x.ForwardCount
	}
	return 0
}

func (x *SubjectListData) GetCategoryName() string {
	if x != nil {
		return x.CategoryName
	}
	return ""
}

type SubjectListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64              `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*SubjectListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *SubjectListResp) Reset() {
	*x = SubjectListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cms_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubjectListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubjectListResp) ProtoMessage() {}

func (x *SubjectListResp) ProtoReflect() protoreflect.Message {
	mi := &file_cms_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubjectListResp.ProtoReflect.Descriptor instead.
func (*SubjectListResp) Descriptor() ([]byte, []int) {
	return file_cms_proto_rawDescGZIP(), []int{9}
}

func (x *SubjectListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *SubjectListResp) GetList() []*SubjectListData {
	if x != nil {
		return x.List
	}
	return nil
}

var File_cms_proto protoreflect.FileDescriptor

var file_cms_proto_rawDesc = []byte{
	0x0a, 0x09, 0x63, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x63, 0x6d, 0x73,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x22, 0xfd, 0x03, 0x0a, 0x0d, 0x53, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x50, 0x69, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x50, 0x69, 0x63,
	0x12, 0x22, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x52,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e,
	0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x52, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x22, 0x0a, 0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x50, 0x69, 0x63,
	0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x50, 0x69,
	0x63, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x68, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x53, 0x68, 0x6f, 0x77, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x22,
	0x0a, 0x0c, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x24, 0x0a, 0x0e, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x22, 0x0a, 0x10,
	0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x27, 0x0a, 0x11, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x80, 0x04, 0x0a, 0x10, 0x53, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x1e,
	0x0a, 0x0a, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x50, 0x69, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x50, 0x69, 0x63, 0x12, 0x22, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x52, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0f, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x61, 0x64,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x52, 0x65, 0x61,
	0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x6c,
	0x62, 0x75, 0x6d, 0x50, 0x69, 0x63, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41,
	0x6c, 0x62, 0x75, 0x6d, 0x50, 0x69, 0x63, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x68,
	0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x53, 0x68, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x46, 0x6f, 0x72, 0x77,
	0x61, 0x72, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x27, 0x0a, 0x11,
	0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0xa6, 0x01, 0x0a, 0x0e, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x52,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e,
	0x0a, 0x0a, 0x53, 0x68, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x53, 0x68, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x27,
	0x0a, 0x13, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x49,
	0x64, 0x73, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0xff, 0x03, 0x0a, 0x0f, 0x53, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x54,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x50, 0x69, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x50, 0x69, 0x63, 0x12, 0x22, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x52, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0f, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x52, 0x65, 0x61, 0x64, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x6c, 0x62, 0x75, 0x6d,
	0x50, 0x69, 0x63, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41, 0x6c, 0x62, 0x75,
	0x6d, 0x50, 0x69, 0x63, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x68, 0x6f, 0x77, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x53, 0x68, 0x6f,
	0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x12, 0x22, 0x0a, 0x0c, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x57, 0x0a, 0x0f, 0x53, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x12, 0x2e, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x63, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x32, 0x80, 0x03, 0x0a, 0x03, 0x43, 0x6d, 0x73, 0x12, 0x43, 0x0a, 0x0a, 0x53, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x41, 0x64, 0x64, 0x12, 0x18, 0x2e, 0x63, 0x6d, 0x73, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x41, 0x64, 0x64, 0x52,
	0x65, 0x71, 0x1a, 0x19, 0x2e, 0x63, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x53,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12,
	0x4c, 0x0a, 0x0d, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x12, 0x1b, 0x2e, 0x63, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e,
	0x63, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x4c, 0x0a,
	0x0d, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1b,
	0x2e, 0x63, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x63, 0x6d,
	0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0b, 0x53,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x19, 0x2e, 0x63, 0x6d, 0x73,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x63, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x10, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x42, 0x79, 0x49, 0x64, 0x73, 0x12, 0x1e, 0x2e, 0x63, 0x6d, 0x73, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x42,
	0x79, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x63, 0x6d, 0x73, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x00, 0x42, 0x0d, 0x5a, 0x0b, 0x2e, 0x2f, 0x63, 0x6d, 0x73, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cms_proto_rawDescOnce sync.Once
	file_cms_proto_rawDescData = file_cms_proto_rawDesc
)

func file_cms_proto_rawDescGZIP() []byte {
	file_cms_proto_rawDescOnce.Do(func() {
		file_cms_proto_rawDescData = protoimpl.X.CompressGZIP(file_cms_proto_rawDescData)
	})
	return file_cms_proto_rawDescData
}

var file_cms_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_cms_proto_goTypes = []interface{}{
	(*SubjectAddReq)(nil),       // 0: cmsclient.SubjectAddReq
	(*SubjectAddResp)(nil),      // 1: cmsclient.SubjectAddResp
	(*SubjectDeleteReq)(nil),    // 2: cmsclient.SubjectDeleteReq
	(*SubjectDeleteResp)(nil),   // 3: cmsclient.SubjectDeleteResp
	(*SubjectUpdateReq)(nil),    // 4: cmsclient.SubjectUpdateReq
	(*SubjectUpdateResp)(nil),   // 5: cmsclient.SubjectUpdateResp
	(*SubjectListReq)(nil),      // 6: cmsclient.SubjectListReq
	(*SubjectListByIdsReq)(nil), // 7: cmsclient.SubjectListByIdsReq
	(*SubjectListData)(nil),     // 8: cmsclient.SubjectListData
	(*SubjectListResp)(nil),     // 9: cmsclient.SubjectListResp
}
var file_cms_proto_depIdxs = []int32{
	8, // 0: cmsclient.SubjectListResp.list:type_name -> cmsclient.SubjectListData
	0, // 1: cmsclient.Cms.SubjectAdd:input_type -> cmsclient.SubjectAddReq
	2, // 2: cmsclient.Cms.SubjectDelete:input_type -> cmsclient.SubjectDeleteReq
	4, // 3: cmsclient.Cms.SubjectUpdate:input_type -> cmsclient.SubjectUpdateReq
	6, // 4: cmsclient.Cms.SubjectList:input_type -> cmsclient.SubjectListReq
	7, // 5: cmsclient.Cms.SubjectListByIds:input_type -> cmsclient.SubjectListByIdsReq
	1, // 6: cmsclient.Cms.SubjectAdd:output_type -> cmsclient.SubjectAddResp
	3, // 7: cmsclient.Cms.SubjectDelete:output_type -> cmsclient.SubjectDeleteResp
	5, // 8: cmsclient.Cms.SubjectUpdate:output_type -> cmsclient.SubjectUpdateResp
	9, // 9: cmsclient.Cms.SubjectList:output_type -> cmsclient.SubjectListResp
	9, // 10: cmsclient.Cms.SubjectListByIds:output_type -> cmsclient.SubjectListResp
	6, // [6:11] is the sub-list for method output_type
	1, // [1:6] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_cms_proto_init() }
func file_cms_proto_init() {
	if File_cms_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cms_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubjectAddReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cms_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubjectAddResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cms_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubjectDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cms_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubjectDeleteResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cms_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubjectUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cms_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubjectUpdateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cms_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubjectListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cms_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubjectListByIdsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cms_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubjectListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cms_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubjectListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cms_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cms_proto_goTypes,
		DependencyIndexes: file_cms_proto_depIdxs,
		MessageInfos:      file_cms_proto_msgTypes,
	}.Build()
	File_cms_proto = out.File
	file_cms_proto_rawDesc = nil
	file_cms_proto_goTypes = nil
	file_cms_proto_depIdxs = nil
}
